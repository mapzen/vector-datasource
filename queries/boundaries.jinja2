{% macro ne_boundary_cols(name) %}
   gid AS __id__,
   {% filter geometry %}the_geom{% endfilter %} AS __geometry__,
   mz_calculate_json_boundaries(t.*) AS mz_properties,
   jsonb_build_object(
     'source', 'naturalearthdata.com',
     'name', {{ name }},
     'min_zoom', mz_boundary_min_zoom,
     'featurecla', featurecla,
     'scalerank', scalerank
    ) AS __properties__
{% endmacro %}

{% if zoom < 2 %}

SELECT
    {{ ne_boundary_cols('NULL') }}
FROM
    ne_110m_admin_0_boundary_lines_land t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

{% elif 2 <= zoom < 5 %}

SELECT
    {{ ne_boundary_cols('NULL') }}
FROM
    ne_50m_admin_0_boundary_lines_land t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

UNION ALL

SELECT
    {{ ne_boundary_cols('NULL') }}
FROM
    ne_50m_admin_1_states_provinces_lines t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

{% elif 5 <= zoom < 8 %}

SELECT
    {{ ne_boundary_cols('name') }}
FROM
    ne_10m_admin_0_boundary_lines_land t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

UNION ALL

SELECT
    {{ ne_boundary_cols('NULL') }}
FROM
    ne_10m_admin_0_boundary_lines_map_units t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

UNION ALL

SELECT
    {{ ne_boundary_cols('name') }}
FROM
    ne_10m_admin_1_states_provinces_lines t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

{% else %}

SELECT
  osm_id AS __id__,
  -- note that we force the RHR, which makes outers clockwise,
  -- then take the boundary, then reverse and intersect with
  -- the query bbox. this is needed because Shapely expects a
  -- correctly-oriented outer to run counter-clockwise.
  {% filter geometry %}{{ bounds['line']|bbox_intersection('st_reverse(st_boundary(st_forcerhr(way)))',3857) }}{% endfilter %} AS __geometry__,
  mz_calculate_json_boundaries(planet_osm_polygon.*) AS mz_properties,
  to_jsonb(tags) || jsonb_build_object(
    'source', 'openstreetmap.org',
    'min_zoom', mz_boundary_min_zoom
  ) AS __properties__

FROM planet_osm_polygon

WHERE
  {{ bounds['line']|bbox_overlaps('way',3857) }} AND
{% if zoom >= 16 %}
    mz_boundary_min_zoom IS NOT NULL
{% else %}
    mz_boundary_min_zoom < {{ zoom + 1 }}
{% endif %}

UNION ALL

SELECT
  gid AS __id__,
  {% filter geometry %}{{ bounds['polygon']|bbox_intersection('the_geom',3857) }}{% endfilter %} AS __geometry__,
  json_build_object('kind', 'maritime') as mz_properties,
  jsonb_build_object(
    'source', 'openstreetmap.org',
    'min_zoom', 8,
    'maritime_boundary', true,
    'kind', 'maritime'
  ) AS __properties__

FROM buffered_land

WHERE
  {{ bounds['polygon']|bbox_filter('the_geom',3857) }}

{% endif %}
