{% macro ne_boundary_cols(name) %}
    gid AS __id__,
    'naturalearthdata.com' AS source,
    {{ name }} AS name,
    mz_boundary_min_zoom as min_zoom,
    NULL AS maritime_boundary,
    {% filter geometry %}the_geom{% endfilter %} AS __geometry__,
    mz_calculate_json_boundaries(t.*) AS mz_properties,
    hstore('source', 'naturalearthdata.com') AS mz_additional_tags,
    row_to_json(t.*) AS tags
{% endmacro %}

{% if zoom < 2 %}

SELECT
    {{ ne_boundary_cols('NULL') }}
FROM
    ne_110m_admin_0_boundary_lines_land t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

{% elif 2 <= zoom < 5 %}

SELECT
    {{ ne_boundary_cols('NULL') }}
FROM
    ne_50m_admin_0_boundary_lines_land t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

UNION ALL

SELECT
    {{ ne_boundary_cols('NULL') }}
FROM
    ne_50m_admin_1_states_provinces_lines t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

{% elif 5 <= zoom < 8 %}

SELECT
    {{ ne_boundary_cols('name') }}
FROM
    ne_10m_admin_0_boundary_lines_land t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

UNION ALL

SELECT
    {{ ne_boundary_cols('NULL') }}
FROM
    ne_10m_admin_0_boundary_lines_map_units t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

UNION ALL

SELECT
    {{ ne_boundary_cols('name') }}
FROM
    ne_10m_admin_1_states_provinces_lines t
WHERE
    {{ bounds['line']|bbox_filter('the_geom',3857) }} AND
    mz_boundary_min_zoom < {{ zoom + 1 }}

{% else %}

SELECT
  osm_id AS __id__,
  'openstreetmap.org' AS source,
  tags->'name' AS name,
  mz_boundary_min_zoom as min_zoom,
  NULL AS maritime_boundary,
  -- note that we force the RHR, which makes outers clockwise,
  -- then take the boundary, then reverse and intersect with
  -- the query bbox. this is needed because Shapely expects a
  -- correctly-oriented outer to run counter-clockwise.
  {% filter geometry %}{{ bounds['line']|bbox_intersection('st_reverse(st_boundary(st_forcerhr(way)))',3857) }}{% endfilter %} AS __geometry__,
  mz_calculate_json_boundaries(planet_osm_polygon.*) AS mz_properties,
  hstore('source', 'openstreetmap.org') AS mz_additional_tags,
  to_json(tags) AS tags

FROM planet_osm_polygon

WHERE
  {{ bounds['line']|bbox_overlaps('way',3857) }} AND
{% if zoom >= 16 %}
    mz_boundary_min_zoom IS NOT NULL
{% else %}
    mz_boundary_min_zoom < {{ zoom + 1 }}
{% endif %}

UNION ALL

SELECT
  gid AS __id__,
  'openstreetmap.org' AS source,
  NULL AS name,
  8 as min_zoom,
  true AS maritime_boundary,
  {% filter geometry %}{{ bounds['polygon']|bbox_intersection('the_geom',3857) }}{% endfilter %} AS __geometry__,
  '{"kind": "maritime"}'::json as mz_properties,
  hstore('source', 'openstreetmap.org') AS mz_additional_tags,
  NULL::json AS tags

FROM buffered_land

WHERE
  {{ bounds['polygon']|bbox_filter('the_geom',3857) }}

{% endif %}
