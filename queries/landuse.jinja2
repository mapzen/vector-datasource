{% macro ne_landuse_cols(kind) %}
    NULL AS protect_class,
    NULL AS operator,
    way_area::bigint AS area,
    '{"kind": "{{ kind }}"}'::json AS mz_properties,
    'naturalearthdata.com' AS source,
    {% filter geometry %}{{ bounds['polygon']|bbox_intersection('the_geom') }}{% endfilter %} AS __geometry__,
    {% filter geometry %}mz_label_placement{% endfilter %} AS mz_label_placement,
    gid AS __id__,
    NULL AS sport,
    NULL AS religion,
    NULL AS surface,
    NULL AS "natural",
    NULL AS attraction,
    NULL AS zoo,
    NULL AS barrier,
    NULL AS mz_is_building,
    hstore('source', 'naturalearthdata.com') AS mz_additional_tags,
    row_to_json(t.*) AS tags
{% endmacro %}

{% macro osm_landuse_detailed_query(table, geom_type) %}
SELECT
{% if table == 'planet_osm_polygon' %}
    CASE WHEN mz_poi_min_zoom IS NULL THEN tags->'name' ELSE NULL END AS name,
{% else %}
    tags->'name' AS name,
{% endif %}
    least(16, mz_landuse_min_zoom)::real AS min_zoom,
    tags->'protect_class' AS protect_class,
    tags->'operator' AS operator,
    way_area::bigint AS area,
    mz_calculate_json_landuse(t.*) AS mz_properties,
    'openstreetmap.org' AS source,
{% if table == 'planet_osm_polygon' %}
    {% filter geometry %}{{ bounds['polygon']|bbox_intersection('way') }}{% endfilter %} AS __geometry__,
{% elif table == 'planet_osm_line' %}
    {% filter geometry %}{{ bounds['line']|bbox_intersection('way') }}{% endfilter %} AS __geometry__,
{% else %}
    {% filter geometry %}way{% endfilter %} AS __geometry__,
{% endif %}
    {% filter geometry %}mz_label_placement{% endfilter %} AS mz_label_placement,
    osm_id AS __id__,
    tags->'sport' AS sport,
    tags->'religion' AS religion,
    tags->'surface' AS surface,
    tags->'natural' AS "natural",
    tags->'attraction' AS attraction,
    tags->'zoo' AS zoo,
    tags->'barrier' AS barrier,
    mz_calculate_is_building_or_part(tags->'building', tags->'building:part') AS mz_is_building,
    hstore('source', 'openstreetmap.org') AS mz_additional_tags,
    to_json(tags) AS tags
FROM
    {{ table }} t
WHERE
    {{ bounds[geom_type]|bbox_filter('way',3857) }}
    {% if zoom <= 15 %}
    AND mz_landuse_min_zoom < {{ zoom + 1 }}
    {% else %}
    AND mz_landuse_min_zoom IS NOT NULL
    {% endif %}
{% endmacro %}

{% if 4 <= zoom < 6 %}

SELECT
    '' AS name,
    4::real AS min_zoom,
    {{ ne_landuse_cols('urban_area') }}
FROM
    ne_50m_urban_areas t
WHERE
    {{ bounds['polygon']|bbox_filter('the_geom',3857) }}

UNION ALL

SELECT
  tags->'name' AS name,
  mz_landuse_min_zoom AS min_zoom,
  tags->'protect_class' AS protect_class,
  tags->'operator' AS operator,
  way_area::bigint AS area,
  mz_calculate_json_landuse(t.*) AS mz_properties,
  'openstreetmap.org' AS source,
  {% filter geometry %}{{ bounds['polygon']|bbox_intersection('way') }}{% endfilter %} AS __geometry__,
  {% filter geometry %}mz_label_placement{% endfilter %} AS mz_label_placement,
  osm_id AS __id__,
  NULL AS sport,
  NULL AS religion,
  NULL AS surface,
  NULL AS "natural",
  NULL AS attraction,
  NULL AS zoo,
  NULL AS barrier,
  NULL AS mz_is_building,
  hstore('source', 'openstreetmap.org') AS mz_additional_tags,
  to_json(tags) AS tags
FROM
  planet_osm_polygon t
WHERE
  {{ bounds['polygon']|bbox_filter('way',3857) }}
  AND (tags->'boundary' IN ('national_park', 'protected_area') OR tags->'leisure'='nature_reserve')
  AND mz_landuse_min_zoom < {{ zoom + 1 }}

{% elif 6 <= zoom < 8 %}

SELECT
    '' AS name,
    4::real AS min_zoom, -- we show urban areas at 4, even if it's not from this table
    {{ ne_landuse_cols('urban_area') }}
FROM
    ne_10m_urban_areas t
WHERE
    {{ bounds['polygon']|bbox_filter('the_geom',3857) }}

UNION ALL

SELECT
  CASE WHEN mz_poi_min_zoom IS NULL THEN tags->'name' ELSE NULL END AS name,
  mz_landuse_min_zoom AS min_zoom,
  tags->'protect_class' AS protect_class,
  tags->'operator' AS operator,
  way_area::bigint AS area,
  mz_calculate_json_landuse(t.*) AS mz_properties,
  'openstreetmap.org' AS source,
  {% filter geometry %}{{ bounds['polygon']|bbox_intersection('way') }}{% endfilter %} AS __geometry__,
  {% filter geometry %}mz_label_placement{% endfilter %} AS mz_label_placement,
  osm_id AS __id__,
  NULL AS sport,
  NULL AS religion,
  NULL AS surface,
  NULL AS "natural",
  NULL AS attraction,
  NULL AS zoo,
  NULL AS barrier,
  mz_calculate_is_building_or_part(tags->'building', tags->'building:part') AS mz_is_building,
  hstore('source', 'openstreetmap.org') AS mz_additional_tags,
  to_json(tags) AS tags
FROM
  planet_osm_polygon t
WHERE
  {{ bounds['polygon']|bbox_filter('way',3857) }}
  AND (tags->'boundary' IN ('national_park', 'protected_area') OR tags->'leisure'='nature_reserve')
  AND mz_landuse_min_zoom < {{ zoom + 1 }}

{% else %}

{{ osm_landuse_detailed_query('planet_osm_polygon', 'polygon') }}

UNION ALL

{{ osm_landuse_detailed_query('planet_osm_line', 'line') }}

{% if zoom < 10 %}
UNION ALL

-- "cross-fade" NE urban area polygons for a couple of zooms.
SELECT
  '' AS name,
  4::real AS min_zoom, -- we show urban areas at 4, even if it's not from this table
  {{ ne_landuse_cols('urban_area') }}
FROM
  ne_10m_urban_areas t
WHERE
  {{ bounds['polygon']|bbox_filter('the_geom',3857) }}
{% endif %}

{% endif %}
