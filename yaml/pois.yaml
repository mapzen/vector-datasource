#
# NOTE: these globals are shared between the POIs and landuse. if you make an
# update here, please remember to also change it there.
#
global:
  - &tier1_min_zoom
    lookup:
      key: { col: way_area }
      op: '>='
      table:
        - [ 3,  300000000 ]
        - [ 4,  300000000 ]
        - [ 5,  150000000 ]
        - [ 6,  150000000 ]
        - [ 7,  100000000 ]
        - [ 8,   10000000 ]
        - [ 9,    5000000 ]
        - [ 10,   1000000 ]
        - [ 11,    500000 ]
        - [ 12,    500000 ]
        - [ 13,    100000 ]
        - [ 14,     50000 ]
        - [ 15,      2000 ]
      default: 16
  - &tier2_min_zoom
    lookup:
      key: { col: way_area }
      op: '>='
      table:
        - [ 4, 1000000000 ]
        - [ 5, 1000000000 ]
        - [ 6,  150000000 ]
        - [ 7,  100000000 ]
        - [ 8,   10000000 ]
        - [ 9,    5000000 ]
        - [ 10,   1000000 ]
        - [ 11,    500000 ]
        - [ 12,    250000 ]
        - [ 13,    100000 ]
        - [ 14,     50000 ]
        - [ 15,      2000 ]
      default: 16
  - &tier3_min_zoom
    lookup:
      key: { col: way_area }
      op: '>='
      table:
        - [ 8,  10000000 ]
        - [ 9,   5000000 ]
        - [ 10,  1000000 ]
        - [ 11,   500000 ]
        - [ 12,   500000 ]
        - [ 13,   100000 ]
        - [ 14,    50000 ]
        - [ 15,     2000 ]
      default: 16
  - &tier4_min_zoom
    lookup:
      key: { col: way_area }
      op: '>='
      table:
        - [ 10, 1000000 ]
        - [ 11,  500000 ]
        - [ 12,  500000 ]
        - [ 13,  100000 ]
        - [ 14,   50000 ]
        - [ 15,    2000 ]
      default: 16
  - &tier5_min_zoom
    lookup:
      key: { col: way_area }
      op: '>='
      table:
        - [ 10, 1000000 ]
        - [ 11,  400000 ]
        - [ 12,  200000 ]
        - [ 13,   50000 ]
        - [ 14,   20000 ]
        - [ 15,    2000 ]
      default: 16
  - &tier6_min_zoom
    lookup:
      key: { col: way_area }
      op: '>='
      table:
        - [ 12, 500000 ]
        - [ 13, 100000 ]
        - [ 14,  50000 ]
        - [ 15,   5000 ]
      default: 16
  - &us_forest_service
        - United States Forest Service
        - US Forest Service
        - U.S. Forest Service
        - USDA Forest Service
        - United States Department of Agriculture
        - US National Forest Service
        - United State Forest Service
        - U.S. National Forest Service
  - &us_parks_service
        - United States National Park Service
        - National Park Service
        - US National Park Service
        - U.S. National Park Service
        - US National Park service
  - &no_name_okay
        - aerialway: pylon
        - aeroway: [ gate, helipad ]
        - amenity: [ atm, bbq, bench, bicycle_parking, bicycle_rental,
            bicycle_repair_station, boat_storage, car_sharing, fuel,
            life_ring, parking, picnic_table, post_box, ranger_station, recycling,
            shelter, shower, telephone, toilets, waste_basket, waste_disposal,
            water_point, watering_place ]
        - barrier: [ cycle_barrier, gate, toll_booth ]
        - emergency: [ lifeguard_tower, phone ]
        - highway: [ bus_stop, ford, mini_roundabout, motorway_junction, platform,
            rest_area, traffic_signals, trailhead ]
        - historic: landmark
        - landuse: quarry
        - leisure: [ dog_park, firepit, fishing, pitch, slipway, swimming_area ]
        - lock: yes
        - man_made: [ adit, communications_tower, mast, mineshaft, observatory,
            offshore_platform, petroleum_well, power_wind, telescope, water_tower,
            water_well, windmill ]
        - natural: [ cave_entrance, peak, volcano, geyser, hot_spring, rock, saddle,
            stone, spring, tree, waterfall ]
        - power: [ pole, tower ]
        - public_transport: [ platform, stop_area ]
        - railway: [ halt, level_crossing, platform, stop, subway_entrance, tram_stop ]
        - tags->icn_ref: true
        - tags->iwn_ref: true
        - tags->lcn_ref: true
        - tags->lwn_ref: true
        - tags->ncn_ref: true
        - tags->nwn_ref: true
        - tags->rcn_ref: true
        - tags->rwn_ref: true
        - tags->whitewater: [ egress, hazard, put_in, put_in;egress, rapid ]
        - tourism: [ alpine_hut, information, picnic_site, viewpoint, wilderness_hut ]
        - waterway: [ dam, lock, waterfall ]

filters:
  # remove disused things, they're not real POIs any more
  - filter:
      - disused: true
      - not: {disused: "no"}
    min_zoom: null
    output:
      kind: null

  # remove things without a name, unless they're in the list of things for which
  # no name is okay.
  - filter:
      - name: false
      - not:
          any: *no_name_okay
    min_zoom: null
    output:
      kind: null

  ############################################################
  # NOT IN ANY TIER
  #
  # These depend on being run before the rule for tourism=attraction,
  # otherwise that rule will trigger first. So these have been moved
  # up here.
  ############################################################
  - filter: {man_made: windmill}
    min_zoom:
      case:
        - when: { tourism: attraction }
          then: 14
        - else: 15
    output: {kind: windmill}
  - filter: {man_made: lighthouse}
    min_zoom:
      case:
        - when: { tourism: attraction }
          then: 14
        - else: 15
    output: {kind: lighthouse}
  - filter: {man_made: observatory}
    min_zoom: 15
    output: {kind: observatory}

  ############################################################
  # TIER 2 OVERRIDES
  #
  # These are things which are "more specific" than things in
  # tier 1, so they should match first.
  ############################################################
  - filter:
      boundary: national_park
      operator: *us_forest_service
    min_zoom: { min: [ { max: [ 7, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output:
      kind: forest
      tier: 2
  - filter:
      any:
        leisure: park
        landuse: park
      park:type: state_recreational_area
    min_zoom: { min: [ { max: [ 9, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output:
      kind: park
      tier: 2
  - filter:
      boundary: national_park
      protect_class: '6'
      protection_title: National Forest
    min_zoom: { min: [ { max: [ 7, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output:
      kind: forest
      tier: 2
  - filter:
      boundary: national_park
      protect_class: '6'
      protection_title: National Forest
    min_zoom: { min: [ { max: [ 7, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output:
      kind: forest
      tier: 2
  - filter:
      boundary: national_park
      any:
        - protect_class: '6'
        - designation: area_of_outstanding_natural_beauty
    min_zoom: { min: [ { max: [ 9, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output:
      kind: park
      tier: 2
  - filter:
      any:
        - boundary:type: protected_area
        - boundary: protected_area
      leisure: nature_reserve
      protect_class: ['4', '5']
      not:
        any:
          - operator: *us_forest_service
          - operator: *us_parks_service
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 5 ] }, *tier2_min_zoom ] }, 10 ] }
    output: {kind: nature_reserve, tier: 2}

  ############################################################
  # TIER 1
  ############################################################
  - filter:
      historic: battlefield
      not: {operator: *us_forest_service}
    min_zoom: { min: [ { max: [ 10, { sum: [ { col: zoom }, 4 ] }, *tier1_min_zoom ] }, 17 ] }
    output: {kind: battlefield, tier: 1}
  - filter:
      boundary: national_park
      any:
        all:
          not: { operator: *us_forest_service }
          protect_class: ['2', '3', '5']
        operator: *us_parks_service
        operator:en: Parks Canada
        designation: national_park
        protection_title: National Park
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 3.5 ] }, *tier1_min_zoom ] }, 10 ] }
    output:
      kind: national_park
      tier: 1

  ############################################################
  # TIER 2
  ############################################################
  - filter:
      boundary: national_park
      not: { operator: *us_forest_service }
      protect_class: ['2', '3', '5']
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 3.5 ] }, *tier2_min_zoom ] }, 10 ] }
    output:
      kind: national_park
      tier: 2
  - filter:
      any:
        leisure: park
        landuse: park
        boundary: national_park
    min_zoom: { min: [ { max: [ 9, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output:
      kind: park
      tier: 2

  # forests
  - filter:
      landuse: forest
      protect_class: '6'
    min_zoom: { min: [ { max: [ 7, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output: { kind: forest, tier: 2 }
  - filter:
      landuse: forest
      operator: *us_forest_service
    min_zoom: { min: [ { max: [ 7, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output: { kind: forest, tier: 2 }
  - filter: {landuse: forest}
    min_zoom: { min: [ { max: [ 10, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output: { kind: forest, tier: 2 }

  # nature reserves
  - filter: {leisure: nature_reserve}
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 5 ] }, *tier2_min_zoom ] }, 10 ] }
    output: { kind: nature_reserve, tier: 2 }
  # protected areas
  - filter: {boundary: protected_area}
    min_zoom: { min: [ { max: [ 7, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output: { kind: protected_area, tier: 2 }

  # woods
  - filter:
      landuse: wood
      operator: *us_forest_service
    min_zoom: { min: [ { max: [ 9, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output: { kind: wood, tier: 2 }
  - filter: {landuse: wood}
    min_zoom: { min: [ { max: [ 10, { sum: [ { col: zoom }, 2 ] }, *tier2_min_zoom ] }, 14 ] }
    output: { kind: wood, tier: 2 }

  # farm
  - filter: {landuse: farm}
    min_zoom: { max: [ 15, *tier2_min_zoom ] }
    output: { kind: farm, tier: 2 }
  # urban, rural, residential, farmland - no POIs

  ############################################################
  # TIER 3
  ############################################################
  # aerodrome
  - filter:
      aeroway: [aerodrome, airport]
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 4.12 ] }, *tier3_min_zoom ] }, 13 ] }
    output:
      kind: {col: aeroway}
      tier: 3
  # military
  - filter: {landuse: military}
    min_zoom: { min: [ { max: [ 8, { sum: [ { col: zoom }, 2 ] }, *tier3_min_zoom ] }, 14 ] }
    output:
      kind: military
      tier: 3
  # university
  - filter: {amenity: university}
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 2.55 ] }, *tier3_min_zoom ] }, 15 ] }
    output: {kind: university, tier: 3}
  # college
  - filter: {amenity: college}
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 2.35 ] }, *tier3_min_zoom ] }, 16 ] }
    output: {kind: college, tier: 3}

  ############################################################
  # TIER 4
  ############################################################
  # breakwater - no POIs
  # bridge - no POIs
  # cemetery
  - filter: {landuse: cemetery}
    min_zoom: { min: [ { max: [ 12, { sum: [ { col: zoom }, 3 ] }, *tier4_min_zoom ] }, 14 ] }
    output:
      kind: cemetery
      tier: 4
  # commercial - no POI
  # cutline - no POI
  # dike - no POI
  # generator
  - filter: {power: generator}
    min_zoom: { max: [15, *tier4_min_zoom ] }
    output: {kind: generator, tier: 4}
  # golf_course
  - filter: {leisure: golf_course}
    min_zoom: { min: [ { max: [ 12, { sum: [ { col: zoom }, 2 ] }, *tier4_min_zoom ] }, 14 ] }
    output:
      kind: golf_course
      tier: 4
  # groyne - no POI
  # hospital
  - filter: {amenity: hospital}
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 3.32 ] }, *tier4_min_zoom ] }, 14 ] }
    output: {kind: hospital, tier: 4}
  # industrial - no POI
  # pier - no POI
  # plant
  - filter: {power: plant}
    min_zoom: { min: [ { max: [ 12, { sum: [ { col: zoom }, 3 ] }, *tier4_min_zoom ] }, 14 ] }
    output:
      kind: plant
      tier: 4
  # railway - no POI
  # recreation_ground
  - filter: {landuse: recreation_ground}
    min_zoom: { min: [ { max: [ 12, { sum: [ { col: zoom }, 3 ] }, *tier4_min_zoom ] }, 14 ] }
    output:
      kind: recreation_ground
      tier: 4
  # retail - no POI
  # sports_centre
  - filter: {leisure: sports_centre}
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 3.98 ] }, *tier4_min_zoom ] }, 17 ] }
    output:
      kind:
        case:
          - when:
              sport: ['fitness', 'gym']
            then: 'fitness'
          - else: 'sports_centre'
      sport:
        case:
          - when:
              sport: ['fitness', 'gym']
            then: null
          - else: { col: 'sport' }
      tier: 4
  # stadium
  - filter: {leisure: stadium}
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 2.3 ] }, *tier4_min_zoom ] }, 15 ] }
    output: {kind: stadium, tier: 4}
  # substation
  - filter: {power: substation}
    min_zoom: 15
    output:
      kind: substation
      tier: 4
  # man_made=tower - no POI
  # wastewater_plant
  - filter: {man_made: wastewater_plant}
    min_zoom: { min: [ { max: [ 12, { sum: [ { col: zoom }, 3 ] }, *tier4_min_zoom ] }, 14 ] }
    output:
      kind: wastewater_plant
      tier: 4
  # works
  - filter: {man_made: works}
    min_zoom: { min: [ { max: [ 12, { sum: [ { col: zoom }, 3 ] }, *tier4_min_zoom ] }, 14 ] }
    output:
      kind: works
      tier: 4
  # water_works
  - filter: {man_made: water_works}
    min_zoom: { min: [ { max: [ 12, { sum: [ { col: zoom }, 3 ] }, *tier4_min_zoom ] }, 14 ] }
    output:
      kind: water_works
      tier: 4
  # wildlife_park - no POI
  - filter:
      zoo: wildlife_park
    min_zoom: 17
    output:
      kind: wildlife_park
      tier: 4
  # winter_sports
  - filter: {landuse: winter_sports}
    min_zoom: { min: [ { max: [ 10, { sum: [ { col: zoom }, 1 ] }, *tier4_min_zoom ] }, 13 ] }
    output:
      kind: winter_sports
      tier: 4
  # zoo
  - filter: {tourism: zoo}
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 3 ] }, *tier4_min_zoom ] }, 13 ] }
    output: {kind: zoo, tier: 4}

  ############################################################
  # TIER 5
  ############################################################
  # aquarium
  - filter: {tourism: aquarium}
    min_zoom: { min: [ { max: [ 14, { sum: [ { col: zoom }, 3.09 ] }, *tier5_min_zoom ] }, 17 ] }
    output: {kind: aquarium, tier: 5}
  # beach
  - filter: {natural: beach}
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 3.2 ] }, *tier5_min_zoom ] }, 14 ] }
    output: {kind: beach, tier: 5}
  # glacier - no POI
  # maze
  - filter:
      attraction: [animal, water_slide, roller_coaster, summer_toboggan,
        carousel, amusement_ride, maze]
    # no point changing this - it's already masked below any value from
    # tier5_min_zoom
    min_zoom: 17
    output:
      kind: {col: attraction}
      tier: 5
  # resort
  - filter: {tourism: resort}
    min_zoom: { min: [ { max: [ 14, { sum: [ { col: zoom }, 5.32 ] }, *tier5_min_zoom ] }, 17 ] }
    output: {kind: resort, tier: 5}
  # theme_park
  - filter: {tourism: theme_park}
    min_zoom: { min: [ { max: [ 13, { sum: [ { col: zoom }, 6.32 ] }, *tier5_min_zoom ] }, 17 ] }
    output: {kind: theme_park, tier: 5}
  # winery
  - filter: {tourism: winery}
    min_zoom: { min: [ { max: [ 14, { sum: [ { col: zoom }, 2.85 ] }, *tier5_min_zoom ] }, 17 ] }
    output: {kind: winery, tier: 5}

  ############################################################
  # TIER 6
  ############################################################
  # allotments - no POI
  # artwork, hanami
  - filter:
      tourism: [artwork, hanami, trail_riding_station]
    # already clamped below polygon area min
    min_zoom: 17
    output:
      kind: {col: tourism}
      tier: 6
  # common - no POI
  # garden
  - filter:
      leisure: garden
      not: { access: [ "private", "no" ] }
    min_zoom: { min: [ { max: [ 12, { col: zoom }, *tier6_min_zoom ] }, 16 ] }
    output: {kind: garden, tier: 6}
  # hedge - no POI
  # pedestrian - no POI
  # pitch
  - filter: {leisure: pitch}
    # already clamped below area min
    min_zoom: 16
    output:
      kind: pitch
      kind_detail: {col: sport}
      tier: 6
  # place_of_worship
  - filter: {amenity: place_of_worship}
    min_zoom: { min: [ { max: [ { sum: [ { mul: [2, {col: zoom}]}, -9.55 ] }, *tier6_min_zoom ] }, 17 ] }
    output: {kind: place_of_worship, tier: 6 }
  # playground
  - filter: { leisure: playground }
    # already clamped below area limit
    min_zoom: 17
    output:
      kind: playground
      tier: 6
  # school
  - filter: {amenity: school}
    min_zoom: { min: [ { max: [ { sum: [ { col: zoom }, 2.3 ] }, *tier6_min_zoom ] }, 15 ] }
    output: {kind: school, tier: 6}
  # tree_row - no POI
  # wilderness_hut
  - filter: {tourism: wilderness_hut}
    min_zoom: 15
    output: {kind: wilderness_hut, tier: 6}

  ############################################################
  # TIER 6 EXTRA - PARKING
  ############################################################
  # parking
  - filter: {amenity: parking}
    min_zoom: 17
    output: {kind: parking, tier: 6}

  ############################################################
  # NOT IN ANY TIER
  ############################################################
  - filter: {historic: battlefield}
    min_zoom: { clamp: { min: 10, max: 17, value: { sum: [ { col: zoom }, 4 ] } } }
    output: {kind: battlefield}
  # park w/ US Parks Service operator
  - filter:
      any:
        leisure: park
        landuse: park
    min_zoom: { clamp: { min: 9, max: 14, value: { sum: [ { col: zoom }, 2 ] } } }
    output: { kind: park }

  - filter:
      natural: [peak, volcano]
    min_zoom:
      lookup:
        key: { call: { func: mz_to_float_meters, args: [ { col: ele } ] } }
        op: '>='
        table:
          - [ 9,  4000 ]
          - [ 10, 3000 ]
          - [ 11, 2000 ]
          - [ 12, 1000 ]
        default: 13
    output:
      kind: {col: natural}
      elevation: {col: ele}
  - filter:
      railway: station
      any:
        historic: false
        all: {historic: 'no'}
    min_zoom: 10
    output:
      kind: station
      state: {col: tags->state}
  - filter: {natural: spring}
    min_zoom: 14
    output: {kind: spring}
  - filter: {railway: level_crossing}
    min_zoom: 18
    output: {kind: level_crossing}
  - filter:
      amenity: [bank, cinema, courthouse, embassy, fire_station, fuel, library, police,
        post_office, theatre]
    min_zoom: { clamp: { min: 0, max: 16, value: { sum: [ { col: zoom }, 2.7 ] } } }
    output:
      kind: {col: amenity}
  - filter:
      amenity: [biergarten, pub, bar, restaurant, fast_food, cafe]
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 2.5 ] } } }
    output:
      kind: {col: amenity}
      kind_detail: {col: cuisine}
  - filter:
      amenity: [pharmacy, veterinary]
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 3.3 ] } } }
    output:
      kind: {col: amenity}
  - filter:
      craft: [brewery, carpenter, confectionery, dressmaker, electrician, gardener,
        handicraft, hvac, metal_construction, painter, photographer, photographic_laboratory,
        plumber, pottery, sawmill, shoemaker, stonemason, tailor, winery]
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 3.3 ] } } }
    output:
      kind: {col: craft}
  - filter: {amenity: nursing_home}
    min_zoom: { clamp: { min: 0, max: 16, value: { sum: [ { col: zoom }, 1.25 ] } } }
    output: {kind: nursing_home}
  - filter: {shop: music}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 1.27 ] } } }
    output: {kind: music}
  - filter: {amenity: community_centre}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 3.98 ] } } }
    output: {kind: community_centre}
  - filter: {shop: sports}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 1.53 ] } } }
    output: {kind: sports}
  - filter: {shop: fishing}
    min_zoom: 16
    output: {kind: fishing}
  - filter: {shop: hunting}
    min_zoom: 16
    output: {kind: hunting}
  - filter: {shop: outdoor}
    min_zoom: { clamp: { min: 15, max: 16, value: { col: zoom } } }
    output: {kind: outdoor}
  - filter: {amenity: dive_centre}
    min_zoom: 16
    output: {kind: dive_centre }
  - filter: {shop: scuba_diving}
    min_zoom: 17
    output: {kind: scuba_diving}
  - filter: {shop: motorcycle}
    min_zoom: 17
    output: {kind: motorcycle}
  - filter: {shop: mall}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 2.77 ] } } }
    output: {kind: mall}
  - filter: {amenity: prison}
    min_zoom: { clamp: { min: 0, max: 15, value: { sum: [ { col: zoom }, 2.55 ] } } }
    output: {kind: prison}
  - filter: {tourism: museum}
    min_zoom: { clamp: { min: 0, max: 16, value: { sum: [ { col: zoom }, 1.43 ] } } }
    output: {kind: museum}
  - filter: {historic: landmark}
    min_zoom: { clamp: { min: 0, max: 15, value: { sum: [ { col: zoom }, 1.76 ] } } }
    output: {kind: landmark}
  - filter: {leisure: marina}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 3.45 ] } } }
    output: {kind: marina}
  - filter: {amenity: townhall}
    min_zoom: { clamp: { min: 0, max: 16, value: { sum: [ { col: zoom }, 1.85 ] } } }
    output: {kind: townhall}
  - filter:
      shop: [laundry, dry_cleaning, toys, ice_cream, wine, alcohol]
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 4.9 ] } } }
    output:
      kind: {col: shop}
  - filter: {amenity: ice_cream}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 4.9 ] } } }
    output: {kind: ice_cream}
  - filter: {amenity: ferry_terminal}
    min_zoom: { clamp: { min: 0, max: 15, value: { sum: [ { col: zoom }, 3.2 ] } } }
    output: {kind: ferry_terminal}
  - filter: {shop: electronics}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 3.3 ] } } }
    output: {kind: electronics}
  - filter:
      shop: [department_store, supermarket, doityourself, hardware, trade]
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 3.29 ] } } }
    output:
      kind: {col: shop}

  - filter:
      any:
        tags->rental: ski
        amenity: ski_rental
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 1.27 ] } } }
    output: {kind: ski_rental}

  - filter: {shop: ski}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 1.27 ] } } }
    output: {kind: ski}
  - filter: {amenity: ski_school}
    min_zoom: { clamp: { min: 0, max: 15, value: { sum: [ { col: zoom }, 2.3 ] } } }
    output: {kind: ski_school}
  - filter: {man_made: snow_cannon}
    min_zoom: { clamp: { min: 0, max: 18, value: { sum: [ { col: zoom }, 4.9 ] } } }
    output: {kind: snow_cannon}
  - filter:
      any:
        leisure: [fitness_centre, gym]
        amenity: gym
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 3.98 ] } } }
    output: {kind: fitness}
  - filter: {leisure: fitness_station}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 3.98 ] } } }
    output: {kind: fitness_station}
  - filter: {leisure: beach_resort}
    min_zoom: { clamp: { min: 0, max: 16, value: { sum: [ { col: zoom }, 0.5 ] } } }
    output: {kind: beach_resort }
  - filter:
      tourism: [hotel, motel]
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 4.3 ] } } }
    output:
      kind: {col: tourism}
  - filter: {highway: motorway_junction}
    min_zoom: 12
    output: {kind: motorway_junction}
  - filter: {historic: monument}
    min_zoom: { clamp: { min: 0, max: 17, value: { sum: [ { col: zoom }, 2.24 ] } } }
    output: {kind: monument }
  - filter:
      tags->zoo: [enclosure, petting_zoo, aviary]
    min_zoom: 17
    output:
      kind: {col: tags->zoo}
  - filter:
      any:
        - {waterway: waterfall}
        - {natural: waterfall}
    min_zoom:
      lookup:
        key: { call: { func: mz_to_float_meters, args: [ { col: height } ] } }
        op: '>='
        table:
          - [ 12, 300 ]
          - [ 13,  50 ]
          - [ 14,  10 ]
          - [ 15,   1 ]
        default: { clamp: { min: 12, max: 14, value: { sum: [ { col: zoom }, 1.066 ] } } }
    output: {kind: waterfall, height: {col: height}}
  - filter: {natural: geyser}
    min_zoom: 15
    output: {kind: geyser}
  - filter: {natural: hot_spring}
    min_zoom: 16
    output: {kind: hot_spring}
  - filter: {historic: fort}
    min_zoom: { clamp: { min: 13, max: 16, value: { sum: [ { col: zoom }, 2.5 ] } } }
    output: {kind: fort }
  - filter: {tourism: gallery}
    min_zoom: { clamp: { min: 15, max: 17, value: { sum: [ { col: zoom }, 1.43 ] } } }
    output: {kind: gallery}
  - filter:
      amenity: [social_facility, clinic, doctors, dentist]
    min_zoom: 17
    output:
      kind: {col: amenity}
  - filter: {tags->healthcare: midwife}
    min_zoom: 17
    output: {kind: midwife}
  - filter:
      amenity: [kindergarten, childcare]
    min_zoom: 17
    output:
      kind: {col: amenity}

  - filter:
      any:
        amenity: boat_rental
        shop: boat_rental
        tags->rental: boat
        all: {shop: boat, tags->rental: 'yes'}
    min_zoom: 16
    output: {kind: boat_rental}

  - filter: {emergency: phone}
    min_zoom: 18
    output: {kind: phone}
  - filter: {amenity: toilets}
    min_zoom: 18
    output: {kind: toilets}
  - filter: {barrier: gate}
    min_zoom: { call: { func: mz_get_min_zoom_highway_level_gate, args: { col: fid } } }
    output: {kind: gate}
  - filter: {barrier: toll_booth}
    min_zoom: 15
    output: {kind: toll_booth}
  - filter: {highway: mini_roundabout}
    min_zoom: 15
    output: {kind: mini_roundabout}
  - filter: {lock: 'yes'}
    min_zoom: 15
    output: {kind: lock}
  - filter: {man_made: power_wind}
    min_zoom: 15
    output: {kind: power_wind}
  - filter: {natural: cave_entrance}
    min_zoom: 15
    output: {kind: cave_entrance}
  - filter: {waterway: lock}
    min_zoom: 15
    output: {kind: lock}
  - filter: {aerialway: station}
    min_zoom: 13
    output:
      kind: station
      state: {col: tags->state}
  - filter:
      railway: [halt, stop, tram_stop]
# to work around overwriting when using the same key twice
      any:
        historic: false
        all: {historic: 'no'}
    min_zoom: 13
    output:
      kind: {col: railway}
  - filter: {railway: platform}
    min_zoom: 15
    output: {kind: platform}
  - filter: {highway: platform}
    min_zoom: 17
    output: {kind: bus_stop}
  - filter: {public_transport: platform, tags->rail: 'yes'}
    min_zoom: 15
    output: {kind: platform}
  - filter: {public_transport: platform, tags->light_rail: 'yes'}
    min_zoom: 15
    output: {kind: platform}
  - filter: {public_transport: platform, tags->bus: 'yes'}
    min_zoom: 17
    output: {kind: bus_stop}
  - filter: {public_transport: platform}
    min_zoom: 15
    output: {kind: platform}
  - filter: {public_transport: stop_area}
    min_zoom: 15
    output: {kind: stop_area}
  - filter: {tags->site: stop_area}
    min_zoom: 15
    output: {kind: stop_area}
  - filter: {tourism: alpine_hut}
    min_zoom: 15
    output: {kind: alpine_hut}
  - filter: {aeroway: gate}
    min_zoom: 16
    output: {kind: aeroway_gate}
  - filter: {aeroway: helipad}
    min_zoom: 16
    output: {kind: helipad}
  - filter:
      amenity: [bus_station, car_sharing, recycling, shelter]
    min_zoom: 16
    output:
      kind: {col: amenity}
  - filter:
      barrier: [block, bollard, lift_gate]
    min_zoom: 16
    output:
      kind: {col: barrier}
  - filter: {highway: ford}
    min_zoom: 16
    output: {kind: ford}
  - filter: {historic: archaeological_site}
    min_zoom: 16
    output: {kind: archaeological_site}
  - filter: {man_made: communications_tower}
    min_zoom: 15
    output: {kind: communications_tower}
  - filter: {man_made: telescope}
    min_zoom: { clamp: { min: 15, max: 16, value: { sum: [ { col: zoom }, 0.1 ] } } }
    output: {kind: telescope}
  - filter: {man_made: offshore_platform}
    min_zoom: 13
    output: {kind: offshore_platform}
  - filter: {man_made: water_tower}
    min_zoom: 15
    output: {kind: water_tower}
  - filter: {natural: tree}
    min_zoom: 16
    output: {kind: tree}
  - filter: {amenity: ranger_station}
    min_zoom: 14
    output: {kind: ranger_station}
  - filter:
      tags->icn_ref: true
    min_zoom: 16
    output:
      kind: bicycle_junction
      ref: {col: tags->icn_ref}
      bicycle_network: icn
  - filter:
      tags->ncn_ref: true
    min_zoom: 16
    output:
      kind: bicycle_junction
      ref: {col: tags->ncn_ref}
      bicycle_network: ncn
  - filter:
      tags->rcn_ref: true
    min_zoom: 16
    output:
      kind: bicycle_junction
      ref: {col: tags->rcn_ref}
      bicycle_network: rcn
  - filter:
      tags->lcn_ref: true
    min_zoom: 16
    output:
      kind: bicycle_junction
      ref: {col: tags->lcn_ref}
      bicycle_network: lcn
  - filter:
      tags->iwn_ref: true
    min_zoom: 16
    output:
      kind: walking_junction
      ref: {col: tags->iwn_ref}
      walking_network: iwn
  - filter:
      tags->nwn_ref: true
    min_zoom: 16
    output:
      kind: walking_junction
      ref: {col: tags->nwn_ref}
      walking_network: nwn
  - filter:
      tags->rwn_ref: true
    min_zoom: 16
    output:
      kind: walking_junction
      ref: {col: tags->rwn_ref}
      walking_network: rwn
  - filter:
      tags->lwn_ref: true
    min_zoom: 16
    output:
      kind: walking_junction
      ref: {col: tags->lwn_ref}
      walking_network: lwn
  - filter: {tourism: camp_site}
    min_zoom: { clamp: { min: 13, max: 16, value: { sum: [ { col: zoom }, 4.9 ] } } }
    output: {kind: camp_site}
  - filter:
      tourism: viewpoint
    min_zoom: 15
    output:
      kind: viewpoint
  - filter:
      tourism: information
    min_zoom: 16
    output:
      kind: information
  - filter:
      amenity: [atm, bus_stop, drinking_water, emergency_phone,
        post_box, telephone]
    min_zoom: 17
    output:
      kind: {col: amenity}
  - filter:
      highway: [bus_stop, traffic_signals]
    min_zoom: 17
    output:
      kind: {col: highway}
  - filter: {historic: memorial}
    min_zoom: 17
    output: {kind: memorial}
  - filter: { leisure: slipway }
    min_zoom: 17
    output:
      kind: slipway
  - filter: {man_made: mast}
    min_zoom: 17
    output: {kind: mast}
  - filter:
      office: [accountant, administrative, advertising_agency, architect, association,
        company, consulting, educational_institution, employment_agency, estate_agent,
        financial, foundation, government, insurance, it, lawyer, newspaper, ngo, notary,
        physician, political_party, religion, research, tax_advisor, telecommunication,
        therapist, travel_agent]
    min_zoom: 17
    output:
      kind: {col: office}
  - filter: {office: 'yes'}
    min_zoom: 17
    output: {kind: office}
  - filter: {shop: bicycle}
    min_zoom: 15
    output: {kind: bicycle}
  - filter:
      amenity: bicycle_rental
      operator: false
    min_zoom: 16
    output: {kind: bicycle_rental}
  - filter:
      amenity: bicycle_rental
      operator: true
    min_zoom: 17
    output:
      kind: bicycle_rental_station
      network:  {col: tags->network}
      operator: {col: operator}
      capacity: {col: tags->capacity}
      ref: {col: ref}
  - filter: {amenity: bicycle_parking}
    min_zoom: 17
    output:
      kind: bicycle_parking
      access: {col: access}
      operator: {col: operator}
      capacity: {col: tags->capacity}
      covered:
        case:
          - when:
              covered: 'yes'
            then: true
      fee:
        case:
          - when:
              fee: true
              not:
                fee: ['no', 'Free', 'free', '0', 'No', 'none']
            then: true
      cyclestreets_id: {col: tags->cyclestreets_id}
      maxstay: {col: tags->maxstay}
      surveillance:
        case:
          - when:
              surveillance: true
              not:
                surveillance: ['no', 'none']
            then: true
  - filter: {barrier: cycle_barrier}
    min_zoom: 18
    output: {kind: cycle_barrier}
  - filter:
      shop: [bakery, books, butcher, car, car_repair, clothes, computer, convenience,
        fashion, florist, gift, greengrocer, hairdresser, jewelry, mobile_phone, optician, pet]
    min_zoom: 17
    output:
      kind: {col: shop}
  - filter:
      tourism: [bed_and_breakfast, chalet, guest_house, hostel]
    min_zoom: 17
    output:
      kind: {col: tourism}
  - filter: {railway: subway_entrance}
    min_zoom: 17
    output: {kind: subway_entrance}
  - filter:
      amenity: [bench, waste_basket]
    min_zoom: 18
    output:
      kind: {col: amenity}
  - filter:
      man_made: [beacon, cross, mineshaft]
    min_zoom: 15
    output:
      kind: {col: man_made}
  - filter: {man_made: adit}
    min_zoom: 16
    output: {kind: adit}
  - filter: {man_made: water_well}
    min_zoom: 17
    output: {kind: water_well}
  - filter: {natural: saddle}
    min_zoom: 14
    output: {kind: saddle}
  - filter:
      natural: [dune, sinkhole]
    min_zoom: 15
    output:
      kind: {col: natural}
  - filter:
      natural: [rock, stone]
    min_zoom: 17
    output:
      kind: {col: natural}
  - filter: {highway: trailhead}
    min_zoom: 15
    output: {kind: trailhead}
  - filter: {tags->whitewater: put_in;egress}
    min_zoom: 14
    output: {kind: put_in_egress}
  - filter:
      tags->whitewater: [put_in, egress]
    min_zoom: 14
    output:
      kind: {col: tags->whitewater}
  - filter:
      tags->whitewater: [hazard, rapid]
    min_zoom: 15
    output:
      kind: {col: tags->whitewater}
  - filter: {shop: gas}
    min_zoom: 18
    output: {kind: gas_canister}
  - filter: {aerialway: pylon}
    min_zoom: 17
    output: {kind: pylon}
  - filter: {amenity: bbq}
    min_zoom: 18
    output: {kind: bbq}
  - filter: {amenity: bicycle_repair_station}
    min_zoom: 18
    output: {kind: bicycle_repair_station}
  - filter: {amenity: life_ring}
    min_zoom: 18
    output: {kind: life_ring}
  - filter: {amenity: picnic_table}
    min_zoom: 18
    output: {kind: picnic_table}
  - filter: {amenity: shower}
    min_zoom: 18
    output: {kind: shower}
  - filter: {amenity: waste_disposal}
    min_zoom: 18
    output: {kind: waste_disposal}
  - filter: {amenity: watering_place}
    min_zoom: 18
    output: {kind: watering_place}
  - filter: {amenity: water_point}
    min_zoom: 18
    output: {kind: water_point}
  - filter: {emergency: lifeguard_tower}
    min_zoom: 17
    output: {kind: lifeguard_tower}
  - filter: {power: pole}
    min_zoom: 18
    output: {kind: power_pole}
  - filter: {power: tower}
    min_zoom: 16
    output: {kind: power_tower}
  - filter: {man_made: petroleum_well}
    min_zoom: 17
    output: {kind: petroleum_well}
  - filter: {leisure: water_park}
    min_zoom: { clamp: { min: 13, max: 15, value: { sum: [ { col: zoom }, 2.34 ] } } }
    output: {kind: water_park}
  - filter: {leisure: summer_camp}
    min_zoom: { clamp: { min: 14, max: 15, value: { sum: [ { col: zoom }, 1.32 ] } } }
    output: {kind: summer_camp}
  - filter: {amenity: boat_storage}
    min_zoom: 17
    output: {kind: boat_storage}
  - filter: {waterway: dam}
    min_zoom: { clamp: { min: 12, max: 14, value: { sum: [ { col: zoom }, 1 ] } } }
    output: {kind: dam}
  - filter: {leisure: dog_park}
    min_zoom: { clamp: { min: 16, max: 17, value: { sum: [ { col: zoom }, 1 ] } } }
    output: {kind: dog_park}
  - filter: {leisure: track}
    min_zoom: { clamp: { min: 16, max: 17, value: { sum: [ { col: zoom }, 1 ] } } }
    output: {kind: recreation_track}
  - filter: {leisure: fishing}
    min_zoom: { clamp: { min: 16, max: 17, value: { sum: [ { col: zoom }, 1.76 ] } } }
    output: {kind: fishing_area}
  - filter: {leisure: swimming_area}
    min_zoom: 16
    output: {kind: swimming_area}
  - filter: {leisure: firepit}
    min_zoom: 18
    output: {kind: firepit}
  - filter: {tourism: caravan_site}
    min_zoom: { clamp: { min: 14, max: 15, value: { col: zoom } } }
    output: {kind: caravan_site}
  - filter: {tourism: picnic_site}
    min_zoom: 16
    output: {kind: picnic_site}
  - filter: {highway: services}
    min_zoom: 11
    output:
      kind: service_area
  - filter: {highway: rest_area}
    min_zoom: 11
    output:
      kind: rest_area
  - filter: {amenity: grave_yard}
    min_zoom: { clamp: { min: 13, max: 17, value: { sum: [ { col: zoom }, 3 ] } } }
    output:
      kind: grave_yard
  - filter: {landuse: quarry}
    min_zoom: { clamp: { min: 12, max: 14, value: { sum: [ { col: zoom }, 3 ] } } }
    output:
      kind: quarry

  ############################################################
  # TIER 6 EXTRA - ATTRACTION
  #
  # Because this is so generic, we want other tags to match
  # before this one.
  ############################################################
  - filter:
      tourism: attraction
    # already clamped below polygon area min
    min_zoom: 17
    output:
      kind: attraction
      tier: 6
